{"ast":null,"code":"var _jsxFileName = \"/Users/immingyu/Desktop/my-calender/src/Pages/Month.tsx\";\nimport styled from \"styled-components\";\nimport Day from \"../Components/Month-day\";\nimport Arrow from \"../Img/ep_arrow-right-bold.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c = Container;\nconst MonthBox = styled.div`\n  border: 1px solid black;\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    font-size: var(--header-size);\n    font-weight: 600;\n  }\n`;\n_c2 = MonthBox;\nconst DaysBox = styled.div`\n  width: 100%;\n  height: 95%;\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = DaysBox;\nconst DayWeekBox = styled.ul`\n  display: flex;\n  flex-grow: 1;\n  width: 100%;\n  height: 1%;\n  li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background-color: var(--whiteblue);\n  }\n`;\n_c4 = DayWeekBox;\nconst WeekBox = styled.ul`\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n`;\n_c5 = WeekBox;\nexport default function Month() {\n  const monthList = nowDate => {\n    const nowYear = nowDate.getFullYear();\n    const nowMonth = nowDate.getMonth();\n    const dayOneWeek = new Date(nowYear, nowMonth, 1).getDay();\n    // const dayLastWeek = new Date(nowYear, nowMonth + 1, 0).getDay();\n    let weekArr = [];\n    const result = [[]];\n    result.pop();\n    //const prevMonthEnd = new Date(nowYear, nowMonth, 0).getDate();\n    const nowMonthEnd = new Date(nowYear, nowMonth + 1, 0).getDate();\n    for (let i = dayOneWeek - 1; i >= 0; i--) {\n      weekArr.push(0);\n    }\n    for (let i = 1; i <= nowMonthEnd; i++) {\n      weekArr.push(new Date(nowYear, nowMonth, i).getDate());\n      if (weekArr.length === 7) {\n        result.push(weekArr);\n        weekArr = [];\n      }\n    }\n    if (weekArr.length) {\n      while (weekArr.length < 7) {\n        weekArr.push(0);\n      }\n      result.push(weekArr);\n    }\n    return result;\n  };\n  const date = new Date();\n  const allDay = monthList(date);\n  const dayWeek = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MonthBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Arrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"January\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DaysBox, {\n      children: [/*#__PURE__*/_jsxDEV(DayWeekBox, {\n        children: dayWeek.map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), allDay.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(WeekBox, {\n          children: item.map((day, key) => {\n            return /*#__PURE__*/_jsxDEV(Day, {\n              day: day\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 24\n            }, this);\n          })\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_c6 = Month;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"MonthBox\");\n$RefreshReg$(_c3, \"DaysBox\");\n$RefreshReg$(_c4, \"DayWeekBox\");\n$RefreshReg$(_c5, \"WeekBox\");\n$RefreshReg$(_c6, \"Month\");","map":{"version":3,"names":["styled","Day","Arrow","jsxDEV","_jsxDEV","Container","div","_c","MonthBox","_c2","DaysBox","_c3","DayWeekBox","ul","_c4","WeekBox","_c5","Month","monthList","nowDate","nowYear","getFullYear","nowMonth","getMonth","dayOneWeek","Date","getDay","weekArr","result","pop","nowMonthEnd","getDate","i","push","length","date","allDay","dayWeek","children","src","fileName","_jsxFileName","lineNumber","columnNumber","map","item","key","idx","day","_c6","$RefreshReg$"],"sources":["/Users/immingyu/Desktop/my-calender/src/Pages/Month.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nimport Day from \"../Components/Month-day\";\nimport Arrow from \"../Img/ep_arrow-right-bold.svg\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst MonthBox = styled.div`\n  border: 1px solid black;\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    font-size: var(--header-size);\n    font-weight: 600;\n  }\n`;\n\nconst DaysBox = styled.div`\n  width: 100%;\n  height: 95%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DayWeekBox = styled.ul`\n  display: flex;\n  flex-grow: 1;\n  width: 100%;\n  height: 1%;\n  li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background-color: var(--whiteblue);\n  }\n`;\n\nconst WeekBox = styled.ul`\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n`;\n\nexport default function Month() {\n  const monthList = (nowDate: Date) => {\n    const nowYear = nowDate.getFullYear();\n    const nowMonth = nowDate.getMonth();\n\n    const dayOneWeek = new Date(nowYear, nowMonth, 1).getDay();\n    // const dayLastWeek = new Date(nowYear, nowMonth + 1, 0).getDay();\n    let weekArr: number[] = [];\n    const result: [number[]] = [[]];\n    result.pop();\n    //const prevMonthEnd = new Date(nowYear, nowMonth, 0).getDate();\n    const nowMonthEnd = new Date(nowYear, nowMonth + 1, 0).getDate();\n\n    for (let i = dayOneWeek - 1; i >= 0; i--) {\n      weekArr.push(0);\n    }\n\n    for (let i = 1; i <= nowMonthEnd; i++) {\n      weekArr.push(new Date(nowYear, nowMonth, i).getDate());\n\n      if (weekArr.length === 7) {\n        result.push(weekArr);\n        weekArr = [];\n      }\n    }\n\n    if (weekArr.length) {\n      while (weekArr.length < 7) {\n        weekArr.push(0);\n      }\n      result.push(weekArr);\n    }\n\n    return result;\n  };\n\n  const date = new Date();\n  const allDay: [number[]] = monthList(date);\n  const dayWeek: string[] = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  return (\n    <Container>\n      <MonthBox>\n        <button>\n          <img src={Arrow}></img>\n        </button>\n        <span>January</span>\n      </MonthBox>\n\n      <DaysBox>\n        <DayWeekBox>\n          {dayWeek.map((item: string, key: number) => {\n            return (\n              <li key={key}>\n                <span>{item}</span>\n              </li>\n            );\n          })}\n        </DayWeekBox>\n        {allDay.map((item: number[], idx: number) => {\n          return (\n            <WeekBox key={idx}>\n              {item.map((day: number, key: number) => {\n                return <Day day={day} key={key}></Day>;\n              })}\n            </WeekBox>\n          );\n        })}\n      </DaysBox>\n    </Container>\n  );\n}\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,KAAK,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,SAAS;AAQf,MAAMG,QAAQ,GAAGR,MAAM,CAACM,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAZID,QAAQ;AAcd,MAAME,OAAO,GAAGV,MAAM,CAACM,GAAI;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GALID,OAAO;AAOb,MAAME,UAAU,GAAGZ,MAAM,CAACa,EAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,UAAU;AAehB,MAAMG,OAAO,GAAGf,MAAM,CAACa,EAAG;AAC1B;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,OAAO;AAMb,eAAe,SAASE,KAAKA,CAAA,EAAG;EAC9B,MAAMC,SAAS,GAAIC,OAAa,IAAK;IACnC,MAAMC,OAAO,GAAGD,OAAO,CAACE,WAAW,CAAC,CAAC;IACrC,MAAMC,QAAQ,GAAGH,OAAO,CAACI,QAAQ,CAAC,CAAC;IAEnC,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACL,OAAO,EAAEE,QAAQ,EAAE,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC;IAC1D;IACA,IAAIC,OAAiB,GAAG,EAAE;IAC1B,MAAMC,MAAkB,GAAG,CAAC,EAAE,CAAC;IAC/BA,MAAM,CAACC,GAAG,CAAC,CAAC;IACZ;IACA,MAAMC,WAAW,GAAG,IAAIL,IAAI,CAACL,OAAO,EAAEE,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAACS,OAAO,CAAC,CAAC;IAEhE,KAAK,IAAIC,CAAC,GAAGR,UAAU,GAAG,CAAC,EAAEQ,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxCL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;IACjB;IAEA,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,WAAW,EAAEE,CAAC,EAAE,EAAE;MACrCL,OAAO,CAACM,IAAI,CAAC,IAAIR,IAAI,CAACL,OAAO,EAAEE,QAAQ,EAAEU,CAAC,CAAC,CAACD,OAAO,CAAC,CAAC,CAAC;MAEtD,IAAIJ,OAAO,CAACO,MAAM,KAAK,CAAC,EAAE;QACxBN,MAAM,CAACK,IAAI,CAACN,OAAO,CAAC;QACpBA,OAAO,GAAG,EAAE;MACd;IACF;IAEA,IAAIA,OAAO,CAACO,MAAM,EAAE;MAClB,OAAOP,OAAO,CAACO,MAAM,GAAG,CAAC,EAAE;QACzBP,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;MACjB;MACAL,MAAM,CAACK,IAAI,CAACN,OAAO,CAAC;IACtB;IAEA,OAAOC,MAAM;EACf,CAAC;EAED,MAAMO,IAAI,GAAG,IAAIV,IAAI,CAAC,CAAC;EACvB,MAAMW,MAAkB,GAAGlB,SAAS,CAACiB,IAAI,CAAC;EAC1C,MAAME,OAAiB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAC3E,oBACEjC,OAAA,CAACC,SAAS;IAAAiC,QAAA,gBACRlC,OAAA,CAACI,QAAQ;MAAA8B,QAAA,gBACPlC,OAAA;QAAAkC,QAAA,eACElC,OAAA;UAAKmC,GAAG,EAAErC;QAAM;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACTvC,OAAA;QAAAkC,QAAA,EAAM;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAEXvC,OAAA,CAACM,OAAO;MAAA4B,QAAA,gBACNlC,OAAA,CAACQ,UAAU;QAAA0B,QAAA,EACRD,OAAO,CAACO,GAAG,CAAC,CAACC,IAAY,EAAEC,GAAW,KAAK;UAC1C,oBACE1C,OAAA;YAAAkC,QAAA,eACElC,OAAA;cAAAkC,QAAA,EAAOO;YAAI;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC,GADZG,GAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,EACZP,MAAM,CAACQ,GAAG,CAAC,CAACC,IAAc,EAAEE,GAAW,KAAK;QAC3C,oBACE3C,OAAA,CAACW,OAAO;UAAAuB,QAAA,EACLO,IAAI,CAACD,GAAG,CAAC,CAACI,GAAW,EAAEF,GAAW,KAAK;YACtC,oBAAO1C,OAAA,CAACH,GAAG;cAAC+C,GAAG,EAAEA;YAAI,GAAMF,GAAG;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UACxC,CAAC;QAAC,GAHUI,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIR,CAAC;MAEd,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEhB;AAACM,GAAA,GAtEuBhC,KAAK;AAAA,IAAAV,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAA3C,EAAA;AAAA2C,YAAA,CAAAzC,GAAA;AAAAyC,YAAA,CAAAvC,GAAA;AAAAuC,YAAA,CAAApC,GAAA;AAAAoC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}