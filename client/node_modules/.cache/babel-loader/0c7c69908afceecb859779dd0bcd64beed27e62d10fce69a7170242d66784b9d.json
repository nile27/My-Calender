{"ast":null,"code":"var _jsxFileName = \"/Users/immingyu/Desktop/my-calender/src/Pages/Month.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Month() {\n  const monthList = nowDate => {\n    const nowYear = nowDate.getFullYear();\n    const nowMonth = nowDate.getMonth();\n\n    // const dayOneWeek = new Date(nowYear, nowMonth, 1).getDay();\n    // const dayLastWeek = new Date(nowYear, nowMonth + 1, 0).getDay();\n\n    const result = [];\n    //const prevMonthEnd = new Date(nowYear, nowMonth, 1).getDate();\n    const nowMonthEnd = new Date(nowYear, nowMonth + 1, 0).getDate();\n    for (let i = 1; i <= nowMonthEnd; i++) {\n      result.push(new Date(nowYear, nowMonth, i));\n    }\n    return result;\n  };\n  const date = new Date();\n  const allDay = monthList(date);\n  allDay.map(day => console.log(day.getDate()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ssss\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_c = Month;\nvar _c;\n$RefreshReg$(_c, \"Month\");","map":{"version":3,"names":["Month","monthList","nowDate","nowYear","getFullYear","nowMonth","getMonth","result","nowMonthEnd","Date","getDate","i","push","date","allDay","map","day","console","log","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/immingyu/Desktop/my-calender/src/Pages/Month.tsx"],"sourcesContent":["export default function Month() {\n  const monthList = (nowDate: Date) => {\n    const nowYear = nowDate.getFullYear();\n    const nowMonth = nowDate.getMonth();\n\n    // const dayOneWeek = new Date(nowYear, nowMonth, 1).getDay();\n    // const dayLastWeek = new Date(nowYear, nowMonth + 1, 0).getDay();\n\n    const result: Date[] = [];\n    //const prevMonthEnd = new Date(nowYear, nowMonth, 1).getDate();\n    const nowMonthEnd = new Date(nowYear, nowMonth + 1, 0).getDate();\n\n    for (let i = 1; i <= nowMonthEnd; i++) {\n      result.push(new Date(nowYear, nowMonth, i));\n    }\n\n    return result;\n  };\n\n  const date = new Date();\n  const allDay: Date[] = monthList(date);\n  allDay.map((day: Date) => console.log(day.getDate()));\n  return <div>ssss</div>;\n}\n"],"mappings":";;AAAA,eAAe,SAASA,KAAKA,CAAA,EAAG;EAC9B,MAAMC,SAAS,GAAIC,OAAa,IAAK;IACnC,MAAMC,OAAO,GAAGD,OAAO,CAACE,WAAW,CAAC,CAAC;IACrC,MAAMC,QAAQ,GAAGH,OAAO,CAACI,QAAQ,CAAC,CAAC;;IAEnC;IACA;;IAEA,MAAMC,MAAc,GAAG,EAAE;IACzB;IACA,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACN,OAAO,EAAEE,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;IAEhE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,WAAW,EAAEG,CAAC,EAAE,EAAE;MACrCJ,MAAM,CAACK,IAAI,CAAC,IAAIH,IAAI,CAACN,OAAO,EAAEE,QAAQ,EAAEM,CAAC,CAAC,CAAC;IAC7C;IAEA,OAAOJ,MAAM;EACf,CAAC;EAED,MAAMM,IAAI,GAAG,IAAIJ,IAAI,CAAC,CAAC;EACvB,MAAMK,MAAc,GAAGb,SAAS,CAACY,IAAI,CAAC;EACtCC,MAAM,CAACC,GAAG,CAAEC,GAAS,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACN,OAAO,CAAC,CAAC,CAAC,CAAC;EACrD,oBAAOS,OAAA;IAAAC,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACxB;AAACC,EAAA,GAvBuBzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}