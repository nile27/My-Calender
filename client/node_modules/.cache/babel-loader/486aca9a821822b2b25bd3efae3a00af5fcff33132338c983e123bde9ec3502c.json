{"ast":null,"code":"var _jsxFileName = \"/Users/immingyu/Desktop/my-calender/src/Components/Month-head.tsx\";\nimport styled from \"styled-components\";\nimport { ReactComponent as Arrow } from \"../Img/ep_arrow-right-bold.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthBox = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    .timeBox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 0;\n      span {\n        font-size: var(--header-size);\n        font-weight: 600;\n        min-width: 120px;\n        text-align: center;\n      }\n    }\n  }\n`;\n_c = MonthBox;\nconst ArrowBtn = styled.button`\n  display: flex;\n  justify-content: center;\n\n  &:hover {\n    path {\n      fill: var(--skyblue);\n    }\n  }\n`;\n_c2 = ArrowBtn;\nconst Arrowimg = styled(Arrow)`\n  width: 100%;\n  height: 100%;\n`;\n_c3 = Arrowimg;\nconst ReverseArrow = styled(Arrowimg)`\n  transform: scaleX(-1);\n`;\n_c4 = ReverseArrow;\nexport default function MonthHead(props) {\n  const {\n    date,\n    setDate,\n    monthPage,\n    setMonthPage\n  } = props;\n  const monthArr = [\"Jaunary\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const changeMonth = count => {\n    const nowDate = new Date(date.getTime());\n    let [yearCount, monthCount] = [0, 0];\n    if (count === 1) setMonthPage(false);else setMonthPage(true);\n    if (nowDate.getMonth() + count % 12 + 1 > 12) {\n      yearCount++;\n      monthCount = count % 12 - 12;\n    } else if (nowDate.getMonth() + count % 12 + 1 <= 0) {\n      yearCount--;\n      monthCount = count % 12 + 12;\n    } else {\n      monthCount = count % 12;\n    }\n    nowDate.setFullYear(nowDate.getFullYear() + yearCount);\n    nowDate.setMonth(nowDate.getMonth() + monthCount);\n    setDate(nowDate);\n  };\n  return /*#__PURE__*/_jsxDEV(MonthBox, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ArrowBtn, {\n        onClick: () => changeMonth(-1),\n        children: /*#__PURE__*/_jsxDEV(Arrowimg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: date.getFullYear()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: monthArr[date.getMonth()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowBtn, {\n        onClick: () => changeMonth(1),\n        children: /*#__PURE__*/_jsxDEV(ReverseArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_c5 = MonthHead;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MonthBox\");\n$RefreshReg$(_c2, \"ArrowBtn\");\n$RefreshReg$(_c3, \"Arrowimg\");\n$RefreshReg$(_c4, \"ReverseArrow\");\n$RefreshReg$(_c5, \"MonthHead\");","map":{"version":3,"names":["styled","ReactComponent","Arrow","jsxDEV","_jsxDEV","MonthBox","div","_c","ArrowBtn","button","_c2","Arrowimg","_c3","ReverseArrow","_c4","MonthHead","props","date","setDate","monthPage","setMonthPage","monthArr","changeMonth","count","nowDate","Date","getTime","yearCount","monthCount","getMonth","setFullYear","getFullYear","setMonth","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c5","$RefreshReg$"],"sources":["/Users/immingyu/Desktop/my-calender/src/Components/Month-head.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { ReactComponent as Arrow } from \"../Img/ep_arrow-right-bold.svg\";\ninterface MyDate {\n  setDate: React.Dispatch<React.SetStateAction<Date>>;\n\n  date: Date;\n  setMonthPage: React.Dispatch<React.SetStateAction<boolean>>;\n  monthPage: boolean;\n}\n\nconst MonthBox = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    .timeBox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 0;\n      span {\n        font-size: var(--header-size);\n        font-weight: 600;\n        min-width: 120px;\n        text-align: center;\n      }\n    }\n  }\n`;\n\nconst ArrowBtn = styled.button`\n  display: flex;\n  justify-content: center;\n\n  &:hover {\n    path {\n      fill: var(--skyblue);\n    }\n  }\n`;\n\nconst Arrowimg = styled(Arrow)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ReverseArrow = styled(Arrowimg)`\n  transform: scaleX(-1);\n`;\nexport default function MonthHead(props: MyDate) {\n  const { date, setDate, monthPage, setMonthPage } = props;\n\n  const monthArr: string[] = [\n    \"Jaunary\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const changeMonth = (count: number) => {\n    const nowDate = new Date(date.getTime());\n    let [yearCount, monthCount] = [0, 0];\n    if (count === 1) setMonthPage(false);\n    else setMonthPage(true);\n\n    if (nowDate.getMonth() + (count % 12) + 1 > 12) {\n      yearCount++;\n      monthCount = (count % 12) - 12;\n    } else if (nowDate.getMonth() + (count % 12) + 1 <= 0) {\n      yearCount--;\n      monthCount = (count % 12) + 12;\n    } else {\n      monthCount = count % 12;\n    }\n\n    nowDate.setFullYear(nowDate.getFullYear() + yearCount);\n    nowDate.setMonth(nowDate.getMonth() + monthCount);\n    setDate(nowDate);\n  };\n\n  return (\n    <MonthBox>\n      <div>\n        <ArrowBtn onClick={() => changeMonth(-1)}>\n          <Arrowimg />\n        </ArrowBtn>\n        <div className=\"timeBox\">\n          <span>{date.getFullYear()}</span>\n          <span>{monthArr[date.getMonth()]}</span>\n        </div>\n\n        <ArrowBtn onClick={() => changeMonth(1)}>\n          <ReverseArrow />\n        </ArrowBtn>\n      </div>\n    </MonthBox>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}